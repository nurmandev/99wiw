name: Deploy Dragonball Dev

on:
  push:
    branches:
      - dev 

# on: workflow_dispatch 

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: '${{ github.repository }}'

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    environment: DEV
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: '${{ env.REGISTRY }}'
          username: tamgoldefy
          password: '${{ secrets.GITHUB_TOKEN }}'

      - name: 'Extract metadata (tags, labels) for FE' 
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}'

      - name: Build and push Docker image FE
        run: |
          docker build \
            --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --build-arg AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }} \
            --label '${{ steps.meta.outputs.labels }}' \
            -t '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}' .
          docker ps

      # - name: Build and push Docker image FE
      #   uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      #   with:
      #     context: .
      #     push: false 
      #     tags: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
      #     labels: '${{ steps.meta.outputs.labels }}'
      #     build-args: |
      #       AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
      #       AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #       AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}
     
  # deploy:
  #   name: Deploy
  #   needs: build-and-push-image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@master
  #     - name: Download artifacts
  #       uses: actions/download-artifact@master
  #       with:
  #         name: build
  #         path: out
  #     - name: Deploy artifacts to AWS S3
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       run: |
  #         aws s3 cp \
  #         ./out s3://bonenza-s3-bucket-cdn \
  #         --recursive \
  #         --region ap-southeast-1
